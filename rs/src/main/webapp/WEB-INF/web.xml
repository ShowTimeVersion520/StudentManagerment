<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  	<display-name>rs</display-name>

	<!-- *********************** 开始 - 跨域 ***********************-->
	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>com.showtime.controller.filter.CORSFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- *********************** 结束 - 跨域 ***********************-->

	<!-- *********************** 开始 - Spring Security *********************** -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- *********************** 结束 - Spring Security *********************** -->

	<!-- *********************** 开始 - Spring  *********************** -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:application-context.xml
		</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- *********************** 结束 - Spring  *********************** -->

	<!-- *********************** 开始 - 字符过滤  ***********************-->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- *********************** 结束 - 字符过滤  *********************** -->



	<!-- *********************** 开始 - Springmcv不拦截  *********************** -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.bmp</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.gif</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.css</url-pattern>
	</servlet-mapping>
	<!-- *********************** 结束 - Springmcv不拦截  *********************** -->

	<!-- *********************** 开始 - Spring MVC  *********************** -->
	<servlet>
    	<servlet-name>springmvc</servlet-name>
    	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    	<init-param>
        	<param-name>contextConfigLocation</param-name>
        	<param-value>classpath:springmvc-servlet.xml</param-value>
    	</init-param>
    	<load-on-startup>1</load-on-startup>
   </servlet>
   
 	<servlet-mapping>
     	<servlet-name>springmvc</servlet-name>
     	<url-pattern>/</url-pattern>
 	</servlet-mapping>
	<!-- *********************** 结束 - Spring MVC *********************** -->

	<!-- ***********************
         **  OpenEntityManagerInViewFilter 有点类似于SSH框架中的OpenSessionInViewFilter
         **  由于Hibernate引入了Lazy Load特性，使得脱离Hibernate的Session周期的对象,如果再想通过getter方法取到其关联对象的值，
         **  Hibernate会抛出一个LazyLoad的Exception。所以为了解决这个问题，Spring引入了这个Filter，
         **  使得Hibernate的Session的生命周期变长
 	     *********************** -->
	<filter>
		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>Spring OpenEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>



    <!-- *********************** 开始 - 欢迎页面 *********************** -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
    <!-- *********************** 结束 - 欢迎页面 *********************** -->
</web-app>